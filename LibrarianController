package library.controller;

import library.entity.*;
import library.exception.LibrarianNotFoundException;
import library.service.*;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@RestController
@RequestMapping("/api/librarians")
public class LibrarianController {

	 @Autowired
	    private LibrarianService librarianService;

	    @GetMapping
	    public List<Librarian> getAllLibrarians() {
	        return librarianService.findAll();
	    }

	    @PostMapping
	    public Librarian addLibrarian(@RequestBody Librarian librarian) {
	        return librarianService.save(librarian);
	    }
	    /*
	    @GetMapping("/{librarianId}")
	    public Librarian getLibrarian(@PathVariable Long librarianId) {
	        return librarianService.findById(librarianId);
	    }
	    */
	    
	    @GetMapping("/{librarianId}")
	    public ResponseEntity<?> findLibrarianById(@PathVariable Long librarianId) {
	        try {
	        	Librarian librarian = librarianService.findById(librarianId); // Try to find the user
	            return ResponseEntity.ok(librarian); // Return the librarian if found
	        } catch (LibrarianNotFoundException ex) {
	            //return ResponseEntity.notFound().build();
	            // Or you can return a custom error message:
	            return ResponseEntity.status(HttpStatus.NOT_FOUND).body("Librarian not found with ID: " + librarianId);
	        }
	    }
	    
	    @PutMapping("/{librarianId}")
	    public Librarian updateLibrarian(@PathVariable Long librarianId, @RequestBody Librarian librarian) {
	        // Additional logic to ensure you're updating the correct book
	        return librarianService.save(librarian);
	    }
	    
	    @DeleteMapping("/{librarianId}")
	    public ResponseEntity<String> deleteLibrarian(@PathVariable Long librarianId) {
	    	librarianService.deleteById(librarianId);
	    	
	    	String message = "Librarian with ID: " + librarianId + " deleted successfully.";
	        return ResponseEntity.ok(message);
	    }
	    


}




